membership,
c.cluster_new,
month,
cluster_new_size,
round(sum(value::float/100),2) as value,
row_number() over (partition by c.user_id order by month) as period
from pnl uc
join clusters as c
on uc.user_created = c.user_created
where TO_DATE(month,'YYYY-MM-DD') >= date_trunc('months',c.kycc)::date
group by 1,2,3,4,5,6,7
), sum_margin as ( -- accounting for retention of users
select
--product_id,
membership,
cluster_new,
--month,
period,
--value,
cluster_new_size,
sum(value) as sum_value
from pnl_margin
group by 1,2,3,4
), pnl_excl_onboard as (
select
c.user_id,
c.user_created,
product_id,
membership,
c.cluster_new,
month,
cluster_new_size,
round(sum(value::float/100),2) as value,
row_number() over (partition by c.user_id order by month) as period
from pnl uc
join clusters as c
on uc.user_created = c.user_created
where TO_DATE(month,'YYYY-MM-DD') >= date_trunc('months',c.kycc)::date
and product_group != 'Onboarding'
group by 1,2,3,4,5,6,7
), sum_pnl_excl_onboard as ( -- accounting for retention of users
select
--product_id,
membership,
cluster_new,
--month,
period,
--value,
cluster_new_size,
sum(value) as sum_value
from pnl_excl_onboard
group by 1,2,3,4
)
select
sm.membership,
sm.cluster_new,
sm.period,
sm.cluster_new_size,
sum(sm.sum_value) over (partition by sm.cluster_new, membership order by sm.period rows unbounded preceding) as pnl_marg,
sum(so.sum_value) over (partition by so.cluster_new, memberhsip order by so.period rows unbounded preceding) as pnl_exob,
round(pnl_marg::float/sm.cluster_new_size,2) as pnl_marg_user,
round(pnl_exob::float/so.cluster_new_size,2) as pnl_exob_user
from sum_margin sm
join sum_pnl_excl_onboard so
on sm.cluster_new = so.cluster_new
and sm.period = so.period
and sm.membership = so.membership
;
" , "redshift-eu")
pnl_retention_membership <- queryDB("
-- pnl considers retention (includes cohort size in calculation) split by memberships
-- pnl considers retention (includes cohort size in calculation)
with clusters as (
select
b.user_id,
c.user_created,
a.kycc,
a.membership,
a.product_id,
a.cluster_new,
count(b.user_id) over (partition by a.cluster_new) as cluster_new_size
from dev_dbt.user_clusters a
join dev_dbt.user_clusters_mapping b
on a.id = b.id
join dbt.zrh_users c
on b.user_id = c.user_id
), pnl as (
select p.*,
m.product_group
from dbt.ucm_pnl p
left join dbt.ucm_mapping m
on p.label = m.label
), pnl_margin as (
select
c.user_id,
c.user_created,
product_id,
membership,
c.cluster_new,
month,
cluster_new_size,
round(sum(value::float/100),2) as value,
row_number() over (partition by c.user_id order by month) as period
from pnl uc
join clusters as c
on uc.user_created = c.user_created
where TO_DATE(month,'YYYY-MM-DD') >= date_trunc('months',c.kycc)::date
group by 1,2,3,4,5,6,7
), sum_margin as ( -- accounting for retention of users
select
--product_id,
membership,
cluster_new,
--month,
period,
--value,
cluster_new_size,
sum(value) as sum_value
from pnl_margin
group by 1,2,3,4
), pnl_excl_onboard as (
select
c.user_id,
c.user_created,
product_id,
membership,
c.cluster_new,
month,
cluster_new_size,
round(sum(value::float/100),2) as value,
row_number() over (partition by c.user_id order by month) as period
from pnl uc
join clusters as c
on uc.user_created = c.user_created
where TO_DATE(month,'YYYY-MM-DD') >= date_trunc('months',c.kycc)::date
and product_group != 'Onboarding'
group by 1,2,3,4,5,6,7
), sum_pnl_excl_onboard as ( -- accounting for retention of users
select
--product_id,
membership,
cluster_new,
--month,
period,
--value,
cluster_new_size,
sum(value) as sum_value
from pnl_excl_onboard
group by 1,2,3,4
)
select
sm.membership,
sm.cluster_new,
sm.period,
sm.cluster_new_size,
sum(sm.sum_value) over (partition by sm.cluster_new, sm.membership order by sm.period rows unbounded preceding) as pnl_marg,
sum(so.sum_value) over (partition by so.cluster_new, sm.membership order by so.period rows unbounded preceding) as pnl_exob,
round(pnl_marg::float/sm.cluster_new_size,2) as pnl_marg_user,
round(pnl_exob::float/so.cluster_new_size,2) as pnl_exob_user
from sum_margin sm
join sum_pnl_excl_onboard so
on sm.cluster_new = so.cluster_new
and sm.period = so.period
and sm.membership = so.membership
;
" , "redshift-eu")
pnl_retention_membership <- queryDB("
-- pnl considers retention (includes cohort size in calculation) split by memberships
-- pnl considers retention (includes cohort size in calculation)
with clusters as (
select
b.user_id,
c.user_created,
a.kycc,
a.membership,
a.product_id,
a.cluster_new,
count(b.user_id) over (partition by a.cluster_new) as cluster_new_size
from dev_dbt.user_clusters a
join dev_dbt.user_clusters_mapping b
on a.id = b.id
join dbt.zrh_users c
on b.user_id = c.user_id
), pnl as (
select p.*,
m.product_group
from dbt.ucm_pnl p
left join dbt.ucm_mapping m
on p.label = m.label
), pnl_margin as (
select
c.user_id,
c.user_created,
product_id,
membership,
c.cluster_new,
month,
cluster_new_size,
round(sum(value::float/100),2) as value,
row_number() over (partition by c.user_id order by month) as period
from pnl uc
join clusters as c
on uc.user_created = c.user_created
where TO_DATE(month,'YYYY-MM-DD') >= date_trunc('months',c.kycc)::date
group by 1,2,3,4,5,6,7
), sum_margin as ( -- accounting for retention of users
select
--product_id,
membership,
cluster_new,
--month,
period,
--value,
cluster_new_size,
sum(value) as sum_value
from pnl_margin
group by 1,2,3,4
), pnl_excl_onboard as (
select
c.user_id,
c.user_created,
product_id,
membership,
c.cluster_new,
month,
cluster_new_size,
round(sum(value::float/100),2) as value,
row_number() over (partition by c.user_id order by month) as period
from pnl uc
join clusters as c
on uc.user_created = c.user_created
where TO_DATE(month,'YYYY-MM-DD') >= date_trunc('months',c.kycc)::date
and product_group != 'Onboarding'
group by 1,2,3,4,5,6,7
), sum_pnl_excl_onboard as ( -- accounting for retention of users
select
--product_id,
membership,
cluster_new,
--month,
period,
--value,
cluster_new_size,
sum(value) as sum_value
from pnl_excl_onboard
group by 1,2,3,4
)
select
sm.membership,
sm.cluster_new,
sm.period,
sm.cluster_new_size,
sum(sm.sum_value) over (partition by sm.cluster_new, sm.membership order by sm.period rows unbounded preceding) as pnl_marg,
sum(so.sum_value) over (partition by so.cluster_new, sm.membership order by so.period rows unbounded preceding) as pnl_exob,
round(pnl_marg::float/sm.cluster_new_size,2) as pnl_marg_user,
round(pnl_exob::float/so.cluster_new_size,2) as pnl_exob_user
from sum_margin sm
join sum_pnl_excl_onboard so
on sm.cluster_new = so.cluster_new
and sm.period = so.period
and sm.membership = so.membership
;
" , "redshift-eu")
save(pnl_retention,
pnl_retention_membership,
spaces_txns,
spaces_accts,
spaces_data,
file = file.path("spaces_freemium.RData"))
library(data.table)
library(scales)
library(kableExtra)
library(tidyr)
library('dplyr')
library('spatstat')
# load the data
df <- load(paste0("/Users/wendyvu/Documents/Engage_Analysis/Spaces_FreemiumModel/spaces_freemium.RData"))
pr <- as.data.frame(pnl_retention)
prm <- as.data.frame(pnl_retention_membership)
st <- as.data.frame(spaces_txns)
sa <- as.data.frame(spaces_accts)
sd <- as.data.frame(spaces_data)
#df$user_certified <- as.Date(df$user_certified)
dim(sd)
str(sd)
head(sd)
sd %>% summarise_all(n_distinct)
#PNL : considers user retention by dividing pnl sum by cohort size
#MARGINAL PNL
ggplot(pnl_retention,
aes(x=as.factor(period),
y = pnl_marg_user,
group=as.factor(cluster_new),
color=as.factor(cluster_new)
)
) +
geom_line(size=1.5)+
geom_point(size=2,
#shape=23,
#fill = "#E69F00"
) +
geom_hline(yintercept=0, linetype="dashed", color = "black",size=1) +
#geom_text(aes(label = round(percent*100), group = membership), position = position_dodge(0.8),vjust = -0.3, size = 3.5) +
ylab("Cumulative Avg PnL per User (Euro)") + xlab("Months from Sign-Up") +
ggtitle("Marginal PnL (includes Onboarding Cost)") +
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 10,face="bold"),
axis.text=element_text(size=12,face="bold",angle=45),
axis.title.x = element_text(size= 16,face='bold'),
axis.title.y = element_text(size=16,face='bold')
) +
#scale_y_continuous(labels=scales::percent) +
#facet_grid(~membership) +
scale_color_manual(values = c("#48AC98", "#E5C3C7","#CB7C7A", "#CAD7CA","#CDA35F","#C8D7E5","#266678","#F5D5B9","#737373","#CCCCCC",
"#D3D3D3",
"#999999",
"#8DA290","#CAA7BD",
"#B4BAD4",
'#B88BAD',
"#DBC4DF",
"#D2C1CE",
"#FDF7C2"),
name = "User Cluster", #labels = c("Premium_funded","Standard_funded")
)
# PNL EXCLUDING ONBOARDING COST
ggplot(pnl_retention,
aes(x=as.factor(period),
y = pnl_exob_user,
group=as.factor(cluster_new),
color=as.factor(cluster_new)
)
) +
geom_line(size=1.5)+
geom_point(size=2,
#shape=23,
#fill = "#E69F00"
) +
geom_hline(yintercept=0, linetype="dashed", color = "black", size= 1) +
#geom_text(aes(label = round(percent*100), group = membership), position = position_dodge(0.8),vjust = -0.3, size = 3.5) +
ylab("Cumulative Avg PnL per User (Euro)") + xlab("Months from Sign-Up") +
ggtitle("PnL (EXCLUDING Onboarding Cost)") +
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 10,face="bold"),
axis.text=element_text(size=12,face="bold",angle=45),
axis.title.x = element_text(size= 16,face='bold'),
axis.title.y = element_text(size=16,face='bold')
) +
#scale_y_continuous(labels=scales::percent) +
#facet_grid(~membership) +
scale_color_manual(values = c("#48AC98", "#E5C3C7","#CB7C7A", "#CAD7CA","#CDA35F","#C8D7E5","#266678","#F5D5B9","#737373","#CCCCCC",
"#D3D3D3",
"#999999",
"#8DA290","#CAA7BD",
"#B4BAD4",
'#B88BAD',
"#DBC4DF",
"#D2C1CE",
"#FDF7C2"),
name = "User Cluster", #labels = c("Premium_funded","Standard_funded")
)
####### MEMBERSHIP
# STANDARD: MARGINAL PNL
ggplot(filter(pnl_retention_membership,membership=='standard'),
aes(x=as.factor(period),
y = pnl_marg_user,
group=as.factor(cluster_new),
color=as.factor(cluster_new)
)
) +
geom_line(size=1.5)+
geom_point(size=2,
#shape=23,
#fill = "#E69F00"
) +
geom_hline(yintercept=0, linetype="dashed", color = "black",size=1) +
#geom_text(aes(label = round(percent*100), group = membership), position = position_dodge(0.8),vjust = -0.3, size = 3.5) +
ylab("Cumulative Avg PnL per User (Euro)") + xlab("Months from Sign-Up") +
ggtitle("STANDARD MEMBERSHIP: Marginal PnL (includes Onboarding Cost)") +
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 10,face="bold"),
axis.text=element_text(size=12,face="bold",angle=45),
axis.title.x = element_text(size= 16,face='bold'),
axis.title.y = element_text(size=16,face='bold')
) +
#scale_y_continuous(labels=scales::percent) +
#facet_grid(~membership) +
scale_color_manual(values = c("#48AC98", "#E5C3C7","#CB7C7A", "#CAD7CA","#CDA35F","#C8D7E5","#266678","#F5D5B9","#737373","#CCCCCC",
"#D3D3D3",
"#999999",
"#8DA290","#CAA7BD",
"#B4BAD4",
'#B88BAD',
"#DBC4DF",
"#D2C1CE",
"#FDF7C2"),
name = "User Cluster", #labels = c("Premium_funded","Standard_funded")
)
# STANDARD: PNL EXCLUDING ONBOARDING COST
ggplot(filter(pnl_retention_membership,membership=='standard'),
aes(x=as.factor(period),
y = pnl_exob_user,
group=as.factor(cluster_new),
color=as.factor(cluster_new)
)
) +
geom_line(size=1.5)+
geom_point(size=2,
#shape=23,
#fill = "#E69F00"
) +
geom_hline(yintercept=0, linetype="dashed", color = "black", size= 1) +
#geom_text(aes(label = round(percent*100), group = membership), position = position_dodge(0.8),vjust = -0.3, size = 3.5) +
ylab("Cumulative Avg PnL per User (Euro)") + xlab("Months after Sign-up") +
ggtitle("STANDARD MEMBERSHIP: PnL (EXCLUDING Onboarding Cost)") +
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 10,face="bold"),
axis.text=element_text(size=12,face="bold",angle=45),
axis.title.x = element_text(size= 16,face='bold'),
axis.title.y = element_text(size=16,face='bold')
) +
#scale_y_continuous(labels=scales::percent) +
#facet_grid(~membership) +
scale_color_manual(values = c("#48AC98", "#E5C3C7","#CB7C7A", "#CAD7CA","#CDA35F","#C8D7E5","#266678","#F5D5B9","#737373","#CCCCCC",
"#D3D3D3",
"#999999",
"#8DA290","#CAA7BD",
"#B4BAD4",
'#B88BAD',
"#DBC4DF",
"#D2C1CE",
"#FDF7C2"),
name = "User Cluster", #labels = c("Premium_funded","Standard_funded")
)
# PREMIUM: MARGINAL PNL
ggplot(filter(pnl_retention_membership,membership=='premium'),
aes(x=as.factor(period),
y = pnl_marg_user,
group=as.factor(cluster_new),
color=as.factor(cluster_new)
)
) +
geom_line(size=1.5)+
geom_point(size=2,
#shape=23,
#fill = "#E69F00"
) +
geom_hline(yintercept=0, linetype="dashed", color = "black",size=1) +
#geom_text(aes(label = round(percent*100), group = membership), position = position_dodge(0.8),vjust = -0.3, size = 3.5) +
ylab("Cumulative Avg PnL per User (Euro)") + xlab("Months from Sign-Up") +
ggtitle("PREMIUM MEMBERSHIP: Marginal PnL (includes Onboarding Cost)") +
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 10,face="bold"),
axis.text=element_text(size=12,face="bold",angle=45),
axis.title.x = element_text(size= 16,face='bold'),
axis.title.y = element_text(size=16,face='bold')
) +
#scale_y_continuous(labels=scales::percent) +
#facet_grid(~membership) +
scale_color_manual(values = c("#48AC98", "#E5C3C7","#CB7C7A", "#CAD7CA","#CDA35F","#C8D7E5","#266678","#F5D5B9","#737373","#CCCCCC",
"#D3D3D3",
"#999999",
"#8DA290","#CAA7BD",
"#B4BAD4",
'#B88BAD',
"#DBC4DF",
"#D2C1CE",
"#FDF7C2"),
name = "User Cluster", #labels = c("Premium_funded","Standard_funded")
)
# PREMIUM: PNL EXCLUDING ONBOARDING COST
ggplot(filter(pnl_retention_membership,membership=='premium'),
aes(x=as.factor(period),
y = pnl_exob_user,
group=as.factor(cluster_new),
color=as.factor(cluster_new)
)
) +
geom_line(size=1.5)+
geom_point(size=2,
#shape=23,
#fill = "#E69F00"
) +
geom_hline(yintercept=0, linetype="dashed", color = "black", size= 1) +
#geom_text(aes(label = round(percent*100), group = membership), position = position_dodge(0.8),vjust = -0.3, size = 3.5) +
ylab("Cumulative Avg PnL per User (Euro)") + xlab("Months from Sign-Up") +
ggtitle("PREMIUM MEMBERSHIP: PnL (EXCLUDING Onboarding Cost)") +
theme(
legend.title = element_text(color = "black", size = 16),
legend.text = element_text(color = "black", size = 10,face="bold"),
axis.text=element_text(size=12,face="bold",angle=45),
axis.title.x = element_text(size= 16,face='bold'),
axis.title.y = element_text(size=16,face='bold')
) +
#scale_y_continuous(labels=scales::percent) +
#facet_grid(~membership) +
scale_color_manual(values = c("#48AC98", "#E5C3C7","#CB7C7A", "#CAD7CA","#CDA35F","#C8D7E5","#266678","#F5D5B9","#737373","#CCCCCC",
"#D3D3D3",
"#999999",
"#8DA290","#CAA7BD",
"#B4BAD4",
'#B88BAD',
"#DBC4DF",
"#D2C1CE",
"#FDF7C2"),
name = "User Cluster", #labels = c("Premium_funded","Standard_funded")
)
clus
